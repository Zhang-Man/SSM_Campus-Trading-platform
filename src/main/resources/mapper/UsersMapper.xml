<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.substitute.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.substitute.entity.Users" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="profileimg" property="profileimg" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="CHAR" />
    <result column="qq" property="qq" jdbcType="CHAR" />
    <result column="usertype" property="usertype" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="creditpoints" property="creditpoints" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, username, password, profileimg, gender, email, tel, wechat, qq, usertype, 
    status, creditpoints
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.substitute.entity.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectByUAndPWithStatus" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where username = #{username,jdbcType=CHAR} and password =#{password,jdbcType=VARCHAR}
  	and status = 1
  </select>
  <select id="selectByTWithStatus" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where tel = #{tel,jdbcType=VARCHAR}
  	and status = 1
  </select>
   <select id="selectByEWithStatus" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where email = #{email,jdbcType=VARCHAR}
  	and status = 1
  </select>
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where username = #{username,jdbcType=CHAR}
  </select>
    <select id="selectByTel" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where tel = #{tel,jdbcType=VARCHAR}
  </select>
    <select id="selectByEmail" resultMap="BaseResultMap" parameterType="com.substitute.entity.Users" >
    select * from users 
  	where email = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.substitute.entity.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.substitute.entity.Users" >
    insert into users (id, account, username, 
      password, profileimg, gender, 
      email, tel, wechat, qq, 
      usertype, status, creditpoints
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, 
      #{password,jdbcType=VARCHAR}, #{profileimg,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{wechat,jdbcType=CHAR}, #{qq,jdbcType=CHAR}, 
      #{usertype,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{creditpoints,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.substitute.entity.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="profileimg != null" >
        profileimg,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creditpoints != null" >
        creditpoints,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="profileimg != null" >
        #{profileimg,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=CHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creditpoints != null" >
        #{creditpoints,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.substitute.entity.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.profileimg != null" >
        profileimg = #{record.profileimg,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null" >
        wechat = #{record.wechat,jdbcType=CHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=CHAR},
      </if>
      <if test="record.usertype != null" >
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creditpoints != null" >
        creditpoints = #{record.creditpoints,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=INTEGER},
      username = #{record.username,jdbcType=CHAR},
      password = #{record.password,jdbcType=VARCHAR},
      profileimg = #{record.profileimg,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=CHAR},
      qq = #{record.qq,jdbcType=CHAR},
      usertype = #{record.usertype,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      creditpoints = #{record.creditpoints,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.substitute.entity.Users" >
    update users
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="profileimg != null" >
        profileimg = #{profileimg,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=CHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creditpoints != null" >
        creditpoints = #{creditpoints,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.substitute.entity.Users" >
    update users
    set account = #{account,jdbcType=INTEGER},
      username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=VARCHAR},
      profileimg = #{profileimg,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=CHAR},
      qq = #{qq,jdbcType=CHAR},
      usertype = #{usertype,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      creditpoints = #{creditpoints,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="SelectAllUser" parameterType="com.substitute.entity.Users" resultType="com.substitute.entity.Users">
  select * from users
  </select>
</mapper>